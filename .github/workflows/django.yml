name: Django CI

on:
  push:
    branches: [ "develop", "main" ]
    paths:
      - 'django_file/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'django_file/**'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > ~/.ssh/google_compute_engine
        echo "${{ secrets.GCP_SSH_PUBLIC_KEY }}" > ~/.ssh/google_compute_engine.pub
        chmod 600 ~/.ssh/google_compute_engine
        chmod 644 ~/.ssh/google_compute_engine.pub
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
    
    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
    
    - name: Deploy to GCP
      env:
        DJANGO_SETTINGS_MODULE: django_file.settings
      run: |
        gcloud compute ssh --project ${{ secrets.GCP_PROJECT_ID }} --zone asia-northeast3-a instance-temp-trend -- 'bash -s' << EOF
          set -e
          cd /home/junghwa010609/django || exit 1
          git config --global --add safe.directory /home/junghwa010609/django
          if [ ! -d .git ]; then
            git init
            git remote add origin https://github.com/Programmers-FinalProject/Temp_Trend.git
            git config core.sparseCheckout true
            echo 'django_file/*' >> .git/info/sparse-checkout
          fi
          git fetch origin develop
          git checkout develop || git checkout -b develop origin/develop
          git pull origin develop || exit 1
          cd django_file || exit 1
          source venv/bin/activate || exit 1
          if git diff --name-only HEAD@{1} HEAD | grep -q 'requirements.txt'; then
            pip install -r requirements.txt || exit 1
          else
            echo "requirements.txt did not change, skipping install."
          fi
          python manage.py migrate || exit 1
          python manage.py collectstatic --noinput || exit 1
          sudo systemctl restart gunicorn || exit 1
          sudo systemctl restart nginx || exit 1
          echo "Deployment completed successfully"
        EOF